{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MainPic from './components/MainPic';\nimport Login from './components/Login';\nimport Answers from './components/Answers';\nimport Register from './components/Register';\nimport User from './User';\nimport Image from './Image'; // import Leaderboard from './components/Leaderboard';\n// I think I need to move all the components into here if I'm going to move them around\n// based on window size\n\nvar DATA_URI = '';\n\nif (process.env.NODE_ENV === 'development') {\n  DATA_URI = 'http://127.0.0.1:5000';\n}\n\nif (process.env.NODE_ENV === 'production') {\n  DATA_URI = 'http://173.255.247.69:5000';\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setImage = function (imageId) {\n      console.log(\"iid = \", imageId);\n\n      _this.state.image.setImageId(imageId); // this.setState({ image : imageId : imageId });\n\n    };\n\n    _this.refresh = function () {\n      if (_this.state.answerToggle === 0) {\n        _this.setState({\n          answerToggle: 1\n        });\n      } else {\n        _this.setState({\n          answerToggle: 0\n        });\n      }\n    };\n\n    _this.switchForm = function (show) {\n      if (show === 'register') {\n        _this.setState({\n          showLogin: false\n        });\n      }\n\n      if (show === 'login') {\n        _this.setState({\n          showLogin: true\n        });\n      }\n    };\n\n    var user = new User();\n    var image = new Image();\n    _this.state = {\n      user: user,\n      image: image,\n      loading: 'initial',\n      answerToggle: 0,\n      showLogin: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // needs work\n      // if (!this.state.image.imageId) {\n      this.setState({\n        loading: 'true'\n      });\n      this.state.image.requestImage('latest', DATA_URI).then(function () {\n        _this2.setState({\n          loading: 'false'\n        });\n      }); // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === 'initial') {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Intializing...\");\n      }\n\n      if (this.state.loading === 'true') {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Loading...\");\n      } // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\n\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.showLogin ? React.createElement(Login, {\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        switchForm: this.switchForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        DATA_URI: DATA_URI,\n        switchForm: this.switchForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(MainPic, {\n        DATA_URI: DATA_URI,\n        image: this.state.image,\n        setImage: this.setImage,\n        selectedImage: \"latest\",\n        user: this.state.user,\n        answerToggle: this.state.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.image.imageId && React.createElement(Answers, {\n        image: this.state.image,\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        trigger: this.state.trigger,\n        unTriggerAnswers: this.unTriggerAnswers,\n        triggerAnswers: this.triggerAnswers,\n        answerToggle: this.props.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // TODO: resize the images automatically, done, could be done better maybe\n// TODO: you should be able to go to a specific image, even \n// if it's just for testing/admin\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free","map":{"version":3,"sources":["C:\\Users\\jayne\\dafuckisthis\\frontend\\src\\App.js"],"names":["React","Component","MainPic","Login","Answers","Register","User","Image","DATA_URI","process","env","NODE_ENV","App","props","setImage","imageId","console","log","state","image","setImageId","refresh","answerToggle","setState","switchForm","show","showLogin","user","loading","requestImage","then","trigger","unTriggerAnswers","triggerAnswers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MainPic from './components/MainPic';\r\nimport Login from './components/Login';\r\nimport Answers from './components/Answers';\r\nimport Register from './components/Register';\r\nimport User from './User';\r\nimport Image from './Image';\r\n// import Leaderboard from './components/Leaderboard';\r\n// I think I need to move all the components into here if I'm going to move them around\r\n// based on window size\r\n\r\nvar DATA_URI = '';\r\nif (process.env.NODE_ENV === 'development') {\r\n  DATA_URI = 'http://127.0.0.1:5000';\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  DATA_URI = 'http://173.255.247.69:5000';\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var user = new User();\r\n    var image = new Image();\r\n    this.state = {\r\n      user : user,\r\n      image : image,\r\n      loading : 'initial',\r\n      answerToggle : 0,\r\n      showLogin : true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // needs work\r\n   // if (!this.state.image.imageId) {\r\n    this.setState({ loading : 'true' });\r\n    this.state.image.requestImage('latest', DATA_URI).then(() => {\r\n      this.setState( { loading : 'false' });\r\n    })\r\n   // }\r\n  }\r\n\r\n  setImage = (imageId) => {\r\n    console.log(\"iid = \", imageId);\r\n    this.state.image.setImageId(imageId);\r\n   // this.setState({ image : imageId : imageId });\r\n  }\r\n\r\n  refresh = () => {\r\n\tif (this.state.answerToggle === 0) {\r\n\t\tthis.setState({ answerToggle : 1 });\r\n\t} else {\r\n\t\tthis.setState({ answerToggle : 0 });\r\n\t}\r\n  }\r\n\r\n  switchForm = (show) => {\r\n    if (show === 'register') {\r\n      this.setState({ showLogin : false });\r\n    }\r\n    if (show === 'login') {\r\n      this.setState({ showLogin : true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.loading === 'initial') {\r\n      return <h2>Intializing...</h2>;\r\n    }\r\n\r\n\r\n    if (this.state.loading === 'true') {\r\n      return <h2>Loading...</h2>;\r\n    }\r\n\t\t\t // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div>\r\n      { this.state.showLogin ? <Login DATA_URI={DATA_URI} user={this.state.user} switchForm={this.switchForm} /> \r\n        :\r\n        <Register DATA_URI={DATA_URI} switchForm={this.switchForm} /> }\r\n        </div>\r\n        <div>\r\n\t   <MainPic DATA_URI={DATA_URI} image={this.state.image} setImage={this.setImage} selectedImage='latest' user={this.state.user} answerToggle={this.state.answerToggle} />\r\n\r\n        </div>\r\n        <div>\r\n      { this.state.image.imageId && <Answers image={this.state.image} DATA_URI={DATA_URI} user={this.state.user} trigger={this.state.trigger} unTriggerAnswers={this.unTriggerAnswers} triggerAnswers={this.triggerAnswers} answerToggle={this.props.answerToggle} />  }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// TODO: resize the images automatically, done, could be done better maybe\r\n// TODO: you should be able to go to a specific image, even \r\n// if it's just for testing/admin\r\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\r\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free\r\n"]},"metadata":{},"sourceType":"module"}