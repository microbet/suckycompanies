{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MainPic from './components/MainPic';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport User from './User';\nimport './App.css'; // import Leaderboard from './components/Leaderboard';\n\nvar DATA_URI = 'http://173.255.247.69:5000';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.refresh = function () {\n      if (_this.state.answerToggle === 0) {\n        _this.setState({\n          answerToggle: 1\n        });\n      } else {\n        _this.setState({\n          answerToggle: 0\n        });\n      }\n    };\n\n    var user = new User();\n    _this.state = {\n      user: user,\n      answerToggle: 0,\n      showLogin: true //     appClass : 'App',\n\n    };\n    return _this;\n  } // componentDidMount() {\n  //  window.addEventListener('resize', this.handleResize);\n  //  }\n  //  handleResize = () => {\n  //    if (window.innerWidth < 600) {\n  //      this.setState({ appClass : \"App-narrow\" });\n  //    } else {\n  //      this.setState({ appClass : \"App\" });\n  //    }\n  //  }\n\n\n  _createClass(App, [{\n    key: \"switchForm\",\n    value: function switchForm(show) {\n      console.log(\"did this happen?\");\n\n      if (show === 'register') {\n        this.setState({\n          showLogin: false\n        });\n      }\n\n      if (show === 'login') {\n        this.setState({\n          showLogin: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.showLogin ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Login, {\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        refresh: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.switchForm('register');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", React.createElement(\"font\", {\n        size: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"to register?\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Register, {\n        DATA_URI: DATA_URI,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.switchForm('login');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        size: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Need to Login?\")))), React.createElement(MainPic, {\n        DATA_URI: DATA_URI,\n        selectedImage: \"latest\",\n        user: this.state.user,\n        refresh: this.refresh,\n        answerToggle: this.state.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // TODO: resize the images automatically, done, could be done better maybe\n// TODO: you should be able to go to a specific image, even \n// if it's just for testing/admin\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free","map":{"version":3,"sources":["C:\\Users\\jayne\\dafuckisthis\\frontend\\src\\App.js"],"names":["React","Component","MainPic","Login","Register","User","DATA_URI","App","props","refresh","state","answerToggle","setState","user","showLogin","show","console","log","switchForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MainPic from './components/MainPic';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport User from './User';\r\nimport './App.css';\r\n// import Leaderboard from './components/Leaderboard';\r\n\r\nconst DATA_URI = 'http://173.255.247.69:5000';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var user = new User();\r\n    this.state = {\r\n      user : user,\r\n      answerToggle : 0,\r\n      showLogin : true,\r\n //     appClass : 'App',\r\n    }\r\n  }\r\n\r\n // componentDidMount() {\r\n  //  window.addEventListener('resize', this.handleResize);\r\n//  }\r\n\r\n//  handleResize = () => {\r\n//    if (window.innerWidth < 600) {\r\n//      this.setState({ appClass : \"App-narrow\" });\r\n//    } else {\r\n//      this.setState({ appClass : \"App\" });\r\n//    }\r\n//  }\r\n\r\n  refresh = () => {\r\n\tif (this.state.answerToggle === 0) {\r\n\t\tthis.setState({ answerToggle : 1 });\r\n\t} else {\r\n\t\tthis.setState({ answerToggle : 0 });\r\n\t}\r\n  }\r\n\r\n  switchForm(show) {\r\n    console.log(\"did this happen?\");\r\n    if (show === 'register') {\r\n      this.setState({ showLogin : false });\r\n    }\r\n    if (show === 'login') {\r\n      this.setState({ showLogin : true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\t\t\t // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\r\n    return (\r\n      <div className=\"App\">\r\n      <div className=\"App-header\">{ this.state.showLogin ? <div><Login DATA_URI={DATA_URI} user={this.state.user} refresh={this.refresh} /> \r\n        <button onClick={ () => {this.switchForm('register')} }> <font size=\"1\">to register?</font></button></div> :\r\n        <div><Register DATA_URI={DATA_URI} /><button onClick={ () => {this.switchForm('login') }}><font size=\"1\">Need to Login?</font></button></div> }</div>\r\n\r\n\t   <MainPic DATA_URI={DATA_URI} selectedImage='latest' user={this.state.user} refresh={this.refresh} answerToggle={this.state.answerToggle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// TODO: resize the images automatically, done, could be done better maybe\r\n// TODO: you should be able to go to a specific image, even \r\n// if it's just for testing/admin\r\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\r\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free\r\n"]},"metadata":{},"sourceType":"module"}