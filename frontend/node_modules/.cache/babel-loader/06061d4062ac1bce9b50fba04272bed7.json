{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MainPic from './components/MainPic';\nimport Login from './components/Login';\nimport Answers from './components/Answers';\nimport Register from './components/Register';\nimport User from './User';\nimport './App.css'; // import Leaderboard from './components/Leaderboard';\n// I think I need to move all the components into here if I'm going to move them around\n// based on window size\n\nvar DATA_URI = 'http://173.255.247.69:5000';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleResize = function () {\n      if (window.innerWidth < 1000) {\n        _this.setState({\n          appClass: \"Narrow-format\"\n        });\n      } else {\n        _this.setState({\n          appClass: \"Wide-format\"\n        });\n      }\n    };\n\n    _this.refresh = function () {\n      if (_this.state.answerToggle === 0) {\n        _this.setState({\n          answerToggle: 1\n        });\n      } else {\n        _this.setState({\n          answerToggle: 0\n        });\n      }\n    };\n\n    _this.switchForm = function (show) {\n      if (show === 'register') {\n        _this.setState({\n          showLogin: false\n        });\n      }\n\n      if (show === 'login') {\n        _this.setState({\n          showLogin: true\n        });\n      }\n    };\n\n    var user = new User();\n    _this.state = {\n      user: user,\n      answerToggle: 0,\n      showLogin: true,\n      appClass: 'App'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleResize();\n      window.addEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\n      return React.createElement(\"div\", {\n        className: this.state.appClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.showLogin ? React.createElement(Login, {\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        switchForm: this.switchForm,\n        refresh: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        DATA_URI: DATA_URI,\n        switchForm: this.switchForm,\n        refresh: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(MainPic, {\n        DATA_URI: DATA_URI,\n        selectedImage: \"latest\",\n        user: this.state.user,\n        refresh: this.refresh,\n        answerToggle: this.state.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"hbi\", this.state.user.imageId && React.createElement(Answers, {\n        imageId: this.state.user.imageId,\n        DATA_URI: this.props.DATA_URI,\n        trigger: this.state.trigger,\n        unTriggerAnswers: this.unTriggerAnswers,\n        triggerAnswers: this.triggerAnswers,\n        user: this.props.user,\n        refresh: this.props.refresh,\n        answerToggle: this.props.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // TODO: resize the images automatically, done, could be done better maybe\n// TODO: you should be able to go to a specific image, even \n// if it's just for testing/admin\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free","map":{"version":3,"sources":["C:\\Users\\jayne\\dafuckisthis\\frontend\\src\\App.js"],"names":["React","Component","MainPic","Login","Answers","Register","User","DATA_URI","App","props","handleResize","window","innerWidth","setState","appClass","refresh","state","answerToggle","switchForm","show","showLogin","user","addEventListener","imageId","trigger","unTriggerAnswers","triggerAnswers"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP,C,CACA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,4BAAjB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAgBnBC,YAhBmB,GAgBJ,YAAM;AACnB,UAAIC,MAAM,CAACC,UAAP,GAAoB,IAAxB,EAA8B;AAC5B,cAAKC,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAG;AAAb,SAAd;AACD,OAFD,MAEO;AACL,cAAKD,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAG;AAAb,SAAd;AACD;AACF,KAtBkB;;AAAA,UAwBnBC,OAxBmB,GAwBT,YAAM;AACjB,UAAI,MAAKC,KAAL,CAAWC,YAAX,KAA4B,CAAhC,EAAmC;AAClC,cAAKJ,QAAL,CAAc;AAAEI,UAAAA,YAAY,EAAG;AAAjB,SAAd;AACA,OAFD,MAEO;AACN,cAAKJ,QAAL,CAAc;AAAEI,UAAAA,YAAY,EAAG;AAAjB,SAAd;AACA;AACC,KA9BkB;;AAAA,UAgCnBC,UAhCmB,GAgCN,UAACC,IAAD,EAAU;AACrB,UAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,cAAKN,QAAL,CAAc;AAAEO,UAAAA,SAAS,EAAG;AAAd,SAAd;AACD;;AACD,UAAID,IAAI,KAAK,OAAb,EAAsB;AACpB,cAAKN,QAAL,CAAc;AAAEO,UAAAA,SAAS,EAAG;AAAd,SAAd;AACD;AACF,KAvCkB;;AAEjB,QAAIC,IAAI,GAAG,IAAIf,IAAJ,EAAX;AACA,UAAKU,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAGA,IADI;AAEXJ,MAAAA,YAAY,EAAG,CAFJ;AAGXG,MAAAA,SAAS,EAAG,IAHD;AAIXN,MAAAA,QAAQ,EAAG;AAJA,KAAb;AAHiB;AASlB;;;;wCAEmB;AAClB,WAAKJ,YAAL;AACAC,MAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkC,KAAKZ,YAAvC;AACD;;;6BA2BQ;AACP;AACA,aACE;AAAK,QAAA,SAAS,EAAE,KAAKM,KAAL,CAAWF,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKE,KAAL,CAAWI,SAAX,GAAuB,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEb,QAAjB;AAA2B,QAAA,IAAI,EAAE,KAAKS,KAAL,CAAWK,IAA5C;AAAkD,QAAA,UAAU,EAAE,KAAKH,UAAnE;AAA+E,QAAA,OAAO,EAAE,KAAKH,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAEA,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAER,QAApB;AAA8B,QAAA,UAAU,EAAE,KAAKW,UAA/C;AAA2D,QAAA,OAAO,EAAE,KAAKH,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKF,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAER,QAAnB;AAA6B,QAAA,aAAa,EAAC,QAA3C;AAAoD,QAAA,IAAI,EAAE,KAAKS,KAAL,CAAWK,IAArE;AAA2E,QAAA,OAAO,EAAE,KAAKN,OAAzF;AAAkG,QAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC,YAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALE,SAQH,KAAKD,KAAL,CAAWK,IAAX,CAAgBE,OAAhB,IAA2B,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWK,IAAX,CAAgBE,OAAlC;AAA2C,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWF,QAAhE;AAA0E,QAAA,OAAO,EAAE,KAAKS,KAAL,CAAWQ,OAA9F;AAAuG,QAAA,gBAAgB,EAAE,KAAKC,gBAA9H;AAAgJ,QAAA,cAAc,EAAE,KAAKC,cAArK;AAAqL,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWY,IAAtM;AAA4M,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWM,OAAhO;AAAyO,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWQ,YAAlQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARxB,CADF;AAaD;;;;EAzDehB,S;;AA4DlB,eAAeO,GAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport MainPic from './components/MainPic';\r\nimport Login from './components/Login';\r\nimport Answers from './components/Answers';\r\nimport Register from './components/Register';\r\nimport User from './User';\r\nimport './App.css';\r\n// import Leaderboard from './components/Leaderboard';\r\n// I think I need to move all the components into here if I'm going to move them around\r\n// based on window size\r\n\r\nconst DATA_URI = 'http://173.255.247.69:5000';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var user = new User();\r\n    this.state = {\r\n      user : user,\r\n      answerToggle : 0,\r\n      showLogin : true,\r\n      appClass : 'App',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    if (window.innerWidth < 1000) {\r\n      this.setState({ appClass : \"Narrow-format\" });\r\n    } else {\r\n      this.setState({ appClass : \"Wide-format\" });\r\n    }\r\n  }\r\n\r\n  refresh = () => {\r\n\tif (this.state.answerToggle === 0) {\r\n\t\tthis.setState({ answerToggle : 1 });\r\n\t} else {\r\n\t\tthis.setState({ answerToggle : 0 });\r\n\t}\r\n  }\r\n\r\n  switchForm = (show) => {\r\n    if (show === 'register') {\r\n      this.setState({ showLogin : false });\r\n    }\r\n    if (show === 'login') {\r\n      this.setState({ showLogin : true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\t\t\t // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\r\n    return (\r\n      <div className={this.state.appClass}>\r\n      { this.state.showLogin ? <Login DATA_URI={DATA_URI} user={this.state.user} switchForm={this.switchForm} refresh={this.refresh} /> \r\n        :\r\n        <Register DATA_URI={DATA_URI} switchForm={this.switchForm} refresh={this.refresh} /> }\r\n\r\n\t   <MainPic DATA_URI={DATA_URI} selectedImage='latest' user={this.state.user} refresh={this.refresh} answerToggle={this.state.answerToggle} />\r\n\r\n      hbi\r\n { this.state.user.imageId && <Answers imageId={this.state.user.imageId} DATA_URI={this.props.DATA_URI} trigger={this.state.trigger} unTriggerAnswers={this.unTriggerAnswers} triggerAnswers={this.triggerAnswers} user={this.props.user} refresh={this.props.refresh} answerToggle={this.props.answerToggle} /> }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// TODO: resize the images automatically, done, could be done better maybe\r\n// TODO: you should be able to go to a specific image, even \r\n// if it's just for testing/admin\r\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\r\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free\r\n"]},"metadata":{},"sourceType":"module"}