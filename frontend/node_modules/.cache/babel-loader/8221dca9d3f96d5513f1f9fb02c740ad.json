{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jayne\\\\dafuckisthis\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MainPic from './components/MainPic';\nimport Login from './components/Login';\nimport Answers from './components/Answers';\nimport Register from './components/Register';\nimport User from './User';\nimport Image from './Image'; // import Leaderboard from './components/Leaderboard';\n// I think I need to move all the components into here if I'm going to move them around\n// based on window size\n\nvar DATA_URI = 'http://173.255.247.69:5000';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setImage = function (imageId) {\n      _this.setState({\n        imageId: imageId\n      });\n    };\n\n    _this.refresh = function () {\n      if (_this.state.answerToggle === 0) {\n        _this.setState({\n          answerToggle: 1\n        });\n      } else {\n        _this.setState({\n          answerToggle: 0\n        });\n      }\n    };\n\n    _this.switchForm = function (show) {\n      if (show === 'register') {\n        _this.setState({\n          showLogin: false\n        });\n      }\n\n      if (show === 'login') {\n        _this.setState({\n          showLogin: true\n        });\n      }\n    };\n\n    var user = new User();\n    var image = new Image();\n    _this.state = {\n      user: user,\n      image: image,\n      answerToggle: 0,\n      showLogin: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.state.image.requestImage('latest');\n      console.log(\"image is \", this.state.image.imageId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.showLogin ? React.createElement(Login, {\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        switchForm: this.switchForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        DATA_URI: DATA_URI,\n        switchForm: this.switchForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MainPic, {\n        DATA_URI: DATA_URI,\n        setImage: this.setImage,\n        selectedImage: \"latest\",\n        user: this.state.user,\n        answerToggle: this.state.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.image && React.createElement(Answers, {\n        imageId: this.state.user.imageId,\n        DATA_URI: DATA_URI,\n        user: this.state.user,\n        trigger: this.state.trigger,\n        unTriggerAnswers: this.unTriggerAnswers,\n        triggerAnswers: this.triggerAnswers,\n        answerToggle: this.props.answerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // TODO: resize the images automatically, done, could be done better maybe\n// TODO: you should be able to go to a specific image, even \n// if it's just for testing/admin\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free","map":{"version":3,"sources":["C:\\Users\\jayne\\dafuckisthis\\frontend\\src\\App.js"],"names":["React","Component","MainPic","Login","Answers","Register","User","Image","DATA_URI","App","props","setImage","imageId","setState","refresh","state","answerToggle","switchForm","show","showLogin","user","image","requestImage","console","log","trigger","unTriggerAnswers","triggerAnswers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MainPic from './components/MainPic';\r\nimport Login from './components/Login';\r\nimport Answers from './components/Answers';\r\nimport Register from './components/Register';\r\nimport User from './User';\r\nimport Image from './Image';\r\n// import Leaderboard from './components/Leaderboard';\r\n// I think I need to move all the components into here if I'm going to move them around\r\n// based on window size\r\n\r\nconst DATA_URI = 'http://173.255.247.69:5000';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var user = new User();\r\n    var image = new Image();\r\n    this.state = {\r\n      user : user,\r\n      image : image,\r\n      answerToggle : 0,\r\n      showLogin : true,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.state.image.requestImage('latest');\r\n    console.log(\"image is \", this.state.image.imageId);\r\n  }\r\n\r\n  setImage = (imageId) => {\r\n    this.setState({ imageId : imageId });\r\n  }\r\n\r\n  refresh = () => {\r\n\tif (this.state.answerToggle === 0) {\r\n\t\tthis.setState({ answerToggle : 1 });\r\n\t} else {\r\n\t\tthis.setState({ answerToggle : 0 });\r\n\t}\r\n  }\r\n\r\n  switchForm = (show) => {\r\n    if (show === 'register') {\r\n      this.setState({ showLogin : false });\r\n    }\r\n    if (show === 'login') {\r\n      this.setState({ showLogin : true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\t\t\t // <Leaderboard DATA_URI={DATA_URI} user={this.state.user} />\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div>\r\n      { this.state.showLogin ? <Login DATA_URI={DATA_URI} user={this.state.user} switchForm={this.switchForm} /> \r\n        :\r\n        <Register DATA_URI={DATA_URI} switchForm={this.switchForm} /> }\r\n        </div>\r\n        <div>\r\n\t   <MainPic DATA_URI={DATA_URI} setImage={this.setImage} selectedImage='latest' user={this.state.user} answerToggle={this.state.answerToggle} />\r\n\r\n        </div>\r\n        <div>\r\n      { this.state.image && <Answers imageId={this.state.user.imageId} DATA_URI={DATA_URI} user={this.state.user} trigger={this.state.trigger} unTriggerAnswers={this.unTriggerAnswers} triggerAnswers={this.triggerAnswers} answerToggle={this.props.answerToggle} />  }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// TODO: resize the images automatically, done, could be done better maybe\r\n// TODO: you should be able to go to a specific image, even \r\n// if it's just for testing/admin\r\n// TODO: thumbup or down shouldn't show on the leader answers? or you should be able to vote - probably should be able to vote\r\n// TODO: any user, logged in, should be able to see just their pictures.  If this is going to be used for storage - it might not be able to be free\r\n"]},"metadata":{},"sourceType":"module"}